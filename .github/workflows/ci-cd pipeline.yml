name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Build the project
        run: dotnet build --configuration Release

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Run unit tests
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"
        
      - name: Code quality check
        run: dotnet sonarscanner begin /k:"YourProjectKey" /d:sonar.login="YourSonarToken"
        continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: echo "Deploying to Staging Environment"
        # Add your deployment scripts or tools here

      - name: Notify Team
        if: failure() || success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "${{ job.status }} - Job ${{ github.job }} in ${{ github.workflow }}"
          body: |
            The job ${{ github.job }} in the workflow ${{ github.workflow }} has finished with status ${{ job.status }}.
            You can check the details here: ${{ github.run_id }}.
          to: unathinkosi42@gmail.com.com
          from: CI-CD-Pipeline@example.com
